name: Build and Test Locust

on: [push]


env:
  locust_mc_BUILD_WITH_KASSIOPEIA: OFF
  locust_mc_ENABLE_EXECUTABLES: ON
  locust_mc_ENABLE_TESTING: ON
  locust_mc_BUILD_TYPE: Debug
  locust_mc_TAG: test

jobs:


  docker_build:
    name: Build and Test in Docker

    runs-on: ubuntu-20.04

    steps:

      - name: Checkout the repo 
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build and test
        run: |
          docker build \
            --target locust_done \
            --build-arg img_repo=${BASE_IMAGE_REPO} \
            --build-arg img_tag=${BASE_IMAGE_TAG} \
            --build-arg build_type=${locust_mc_BUILD_TYPE} \
            --build-arg build_tests_exe=${locust_mc_ENABLE_TESTING} \
            --build-arg locust_mc_tag=${locust_mc_TAG} \
            --tag project8/locust_mc:${locust_mc_TAG} \
            .
          docker run project8/locust_mc:${locust_mc_TAG} /tmp_source/build/Source/Testing/RunTests

  build_cpp:
    name: Build and Test Cpp

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-10.15]

    steps:

      - name: Checkout reposistory
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Mac Dependencies
        if: startsWith(matrix.os, 'macos')  # Mac only
        run: |
          brew install \
            boost \
            rapidjson \
            yaml-cpp


      - name: Linux Dependencies
        if: startsWith(matrix.os, 'ubuntu')  # Linux only
        run: |
          sudo apt-get update
          sudo apt-get install -yq \
            libboost-all-dev \
            libyaml-cpp-dev \
            rapidjson-dev
          

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${locust_mc_BUILD_TYPE} -Dlocust_mc_ENABLE_EXECUTABLES=${locust_mc_ENABLE_EXECUTABLES} -Dlocust_mc_ENABLE_TESTING=${locust_mc_ENABLE_TESTING} ..

      - name: CMake Build
        run: |
          cd build
          make -j install

      - name: Run tests
        run: |
          cd build
          Source/Testing/RunTests





# For debugging
      - name: Setup tmate session
        if: ${{ ! success() }}
        uses: mxschmitt/action-tmate@v3

