name: Build and Test Locust

on:
  pull_request:
#  push:
#    branches: [main, develop]
#    tags: ['*']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  LUNA_BASE_VER: v1.3.0
  BUILD_IMAGE: locust_kass
#  locust_mc_BUILD_WITH_KASSIOPEIA: ON
#  locust_mc_ENABLE_EXECUTABLES: ON
  narg: 2
#  locust_mc_ENABLE_TESTING: ON
#  locust_mc_BUILD_TYPE: Debug
#  locust_mc_TAG: test

jobs:

  docker-build-and-publish:

    name: Build and push the docker images

    strategy:
      matrix:
        build: [Dev, Prod]
        fail-fast: [false]
        include:
          - build: Dev
            tag-suffix: '-dev'
            build-type: Debug
            build-tests: true
          - build: Prod
            tag-suffix: ''
            build-type: Release
            build-tests: false

    runs-on: ubuntu-latest

    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get Kassiopeia version
        id: get-kass-version
        run: |
          export KASS_VER=$(./Scripts/extract_kass_version.sh ./kassiopeia/CMakeLists.txt)
          echo "Kassiopeia version is ${KASS_VER}"
          echo "$(curl --head --fail -H \"Authorization: Bearer ${{ secrets.REPO_ACCESS_TOKEN }}\" https://ghcr.io/v2/project8/${{ env.BUILD_IMAGE }}/manifests/${KAS_VER})"
          echo "KASS_VER=${KASS_VER}}" >> $GITHUB_OUTPUT
          
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.BUILD_IMAGE }}
          flavor: |
            latest=auto
            suffix=${{ matrix.tag-suffix }},onlatest=true
          tags: |
            type=raw,value=${{ steps.get-kass-version.outputs.KASS_VER }}

      - name: Get previous tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        id: tag_name
        with:
          fallback: beta

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: print things
        run: |
          echo "docker_meta.outputs.tags: ${{ steps.docker_meta.outputs.tags }}"
          echo "${{ env.LUNA_BASE_VER }}"
          echo "${{ matrix.build-type }}"
          echo "${{ env.NARG }}"

      - name: Build Kassiopeia
        id: build-kass
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.kass
          push: true
          load: false
          build-args: |
            img_repo=ghcr.io/project8/luna_base
            img_tag=${{ env.LUNA_BASE_VER }}-dev
            build_type=${{ matrix.build-type }}
            narg=${{ env.NARG }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        platform: linux/amd64


# For debugging
#      - name: Setup tmate session
#        if: ${{ ! success() }}
#        uses: mxschmitt/action-tmate@v3

